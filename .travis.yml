# Build Configuration for Travis
# https://travis-ci.org

language:
  - cpp

jdk: oraclejdk8

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Android
    - language: android
      os: linux
      sudo: required
      dist: precise
      env: VULKAN_LVL_BUILD_CONFIG=ANDROID
    # Linux debug
    #- os: linux
    #  compiler: gcc
    #  sudo: required
    #  dist: trusty
    #  env: VULKAN_LVL_BUILD_CONFIG=NORMAL VULKAN_LVL_BUILD_TYPE=Debug

android:
  components:
    - tools
    - platform-tools
    - build-tools-23.0.2
    - android-23

cache:
  directories:
    - external
    - build-android/external

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then sudo apt-get update; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then sudo apt-get install git cmake build-essential bison libx11-dev libxcb1-dev libwayland-dev libmirclient-dev; fi
  # Install the Android NDK.
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then sudo apt-get install python3; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then export ARCH=`uname -m`; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then wget http://dl.google.com/android/repository/android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then unzip -u -q android-ndk-r13b-linux-${ARCH}.zip; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then export PATH=`pwd`/android-ndk-r13b:$PATH; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then export JAVA_HOME="/usr/lib/jvm/java-8-oracle"; fi

install:
  # Make sure we can find the above Python packages
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$HOME/.local/bin:$PATH; fi

before_script:
  # Linux and macOS
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then ./update_external_sources.sh; fi
  # Android
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then pushd build-android; fi
  #- if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then ./update_external_sources_android.sh; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then ./android-generate.sh; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then popd; fi

script:
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then mkdir build && cd build; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then cmake -DCMAKE_BUILD_TYPE=${VULKAN_LVL_BUILD_TYPE:-Debug} ..; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "NORMAL" ]]; then make -j $(nproc); fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then pushd build-android; fi
  - if [[ "$VULKAN_LVL_BUILD_CONFIG" == "ANDROID" ]]; then ndk-build -j $(nproc); fi
